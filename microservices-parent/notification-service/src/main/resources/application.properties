#spring.application.name=notification-service
#server.port=8283
#
#eureka.client.serviceUrl.defaultzone=http://localhost:8761/eureka
#
#spring.cloud.compatibility-verifier.enabled=false
#
#
#
## Spring Actuator
## makes all management endopoints public
#management.endpoints.web.exposure.include=*
## makes the health endopoint accessible over a web interface
#management.endpoint.health.show-details=always
#
## Zipkin
## Is used to configure the endpoint where the traces are sent to
#management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
#management.tracing.sampling.probability=1.0
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
#
## Kafka properties
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.template.default-topic=notificationTopic
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.type.mapping=event:ca.gbc.notificationservice.events.OrderPlaceEvent

spring.application.name=notification-service
server.port=8283

eureka.client.serviceUrl.defaultzone=http://discovery-service:8761/eureka

spring.cloud.compatibility-verifier.enabled=false

# Spring Actuator
# makes all management endopoints public
management.endpoints.web.exposure.include=*
# makes the health endopoint accessible over a web interface
management.endpoint.health.show-details=always

# Zipkin
# Is used to configure the endpoint where the traces are sent to
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Kafka properties
spring.kafka.bootstrap-servers=http://broker:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=event:ca.gbc.notificationservice.events.OrderPlaceEvent

